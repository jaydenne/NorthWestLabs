@model NorthWestLabs.Models.NewClientOrder
@{
    ViewBag.Title = "ClientNewWorkOrder";
}

<h2>Work Order</h2>
<hr />


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    Dictionary<int,NorthWestLabs.Models.Compound> LTNumberList = new Dictionary<int, NorthWestLabs.Models.Compound>();
    foreach(NorthWestLabs.Models.CompoundAssayOrder item in Model.compoundAssayOrderList)
    {
        if(!LTNumberList.ContainsKey(item.compound.LTNumber))
        {
            LTNumberList.Add(item.compound.LTNumber,item.compound);
        }
    }

    foreach (var LtNumber in LTNumberList)
    {
            <!--Display of compound and assay details-->
            <h3>Compound @LtNumber.Key | @LtNumber.Value.CompoundName</h3>
            <ul>
                @foreach(NorthWestLabs.Models.CompoundAssayOrder item in Model.compoundAssayOrderList) {
                    if (item.assayOrder.Compound.LTNumber == LtNumber.Key)
                    {
                <li>
                    <p>@item.assayOrder.ProtocolNotebook.AssayName   </p>
                    <p>Sequence Number @item.compound.SequenceCode</p>
                    <p>Work Days To Processing: @item.assayOrder.PriorityLevel.WorkDaysProcessing</p>
                    <p> Priority Rate:@item.assayOrder.PriorityLevel.PriorityRate</p>
                </li>
                    }
                }
      @Html.ActionLink("Add Assay to Compound", "ClientAddAssay", "ClientPortalOrders", new { workorderid = Model.workOrder.WorkOrderID, LTNumber=LtNumber.Key }, new { @class = "btn btn-primary btn default" })
             </ul>

    }
    @Html.ActionLink("Add Another Compound", "ClientNewWorkOrder", "ClientPortalOrders", new { workorderid = Model.workOrder.WorkOrderID}, new { @class = "btn btn-primary btn default" })

    //@Html.ActionLink("Add Another Compound to Order", "ClientNewWorkOrder", "ClientPortalOrders", new { workorderid = Model.compoundAssayOrderList.wor item.assayOrder.WorkOrderID, LTnumber = item.compound.LTNumber }, new { @class = "btn btn-primary btn default" })



                <div class="form-horizontal">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        <input type="submit" value="New Order" class="btn btn-default" />
                    </div>
                </div>

   
}

<div>
    @Html.ActionLink("Back to Client Portal", "Index", "Client", null, new { @class = "btn btn-primary btn default" })
</div>
